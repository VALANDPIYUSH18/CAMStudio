spring:
  application:
    name: photo-crm-saas
  
  profiles:
    active: dev
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/photocrm_dev}
    username: ${DATABASE_USERNAME:photocrm_user}
    password: ${DATABASE_PASSWORD:photocrm_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
        multi_tenant: SCHEMA
        multi_tenant_connection_provider: com.photocrm.config.MultiTenantConnectionProvider
        multi_tenant_identifier_resolver: com.photocrm.config.CurrentTenantIdentifierResolver
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
      enabled: true

# Server configuration
server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,image/jpeg,image/png
  error:
    include-message: always
    include-binding-errors: always

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    com.photocrm: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-super-secret-jwt-key-change-in-production}
  expiration: 86400000 # 24 hours
  refresh-expiration: 604800000 # 7 days

# AWS S3 Configuration
aws:
  s3:
    endpoint: ${S3_ENDPOINT:http://localhost:9000}
    access-key: ${S3_ACCESS_KEY:minioadmin}
    secret-key: ${S3_SECRET_KEY:minioadmin123}
    bucket-name: ${S3_BUCKET_NAME:photocrm-photos}
    region: ${S3_REGION:us-east-1}

# Payment Configuration
payment:
  stripe:
    public-key: ${STRIPE_PUBLIC_KEY:}
    secret-key: ${STRIPE_SECRET_KEY:}
    webhook-secret: ${STRIPE_WEBHOOK_SECRET:}
  razorpay:
    key-id: ${RAZORPAY_KEY_ID:}
    key-secret: ${RAZORPAY_KEY_SECRET:}
    webhook-secret: ${RAZORPAY_WEBHOOK_SECRET:}

# Application specific configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  photo:
    max-file-size: 52428800 # 50MB
    allowed-types: image/jpeg,image/png,image/tiff,image/raw
    thumbnail:
      width: 300
      height: 300
      quality: 0.8
  
  tenant:
    default-schema: public
    schema-prefix: tenant_
