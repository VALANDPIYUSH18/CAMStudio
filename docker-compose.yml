version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: photocrm-postgres
    environment:
      POSTGRES_DB: photocrm_dev
      POSTGRES_USER: photocrm_user
      POSTGRES_PASSWORD: photocrm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - photocrm-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: photocrm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - photocrm-network

  # MinIO S3 Compatible Storage
  minio:
    image: minio/minio:latest
    container_name: photocrm-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - photocrm-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: photocrm-backend
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DATABASE_URL: jdbc:postgresql://postgres:5432/photocrm_dev
      DATABASE_USERNAME: photocrm_user
      DATABASE_PASSWORD: photocrm_password
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - photocrm-network
    volumes:
      - ./backend:/app
    command: ./mvnw spring-boot:run

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: photocrm-frontend
    environment:
      VITE_API_URL: http://localhost:8080/api
      VITE_S3_URL: http://localhost:9000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - photocrm-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  photocrm-network:
    driver: bridge